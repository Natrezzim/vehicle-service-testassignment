/*
 * This file is generated by jOOQ.
 */
package ru.testassignment.vehicleservice.jooq;


import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import ru.testassignment.vehicleservice.jooq.tables.Brands;
import ru.testassignment.vehicleservice.jooq.tables.Models;
import ru.testassignment.vehicleservice.jooq.tables.Owners;
import ru.testassignment.vehicleservice.jooq.tables.Vehicles;
import ru.testassignment.vehicleservice.jooq.tables.records.BrandsRecord;
import ru.testassignment.vehicleservice.jooq.tables.records.ModelsRecord;
import ru.testassignment.vehicleservice.jooq.tables.records.OwnersRecord;
import ru.testassignment.vehicleservice.jooq.tables.records.VehiclesRecord;


/**
 * A class modelling foreign key relationships and constraints of tables in public.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Keys {

  // -------------------------------------------------------------------------
  // UNIQUE and PRIMARY KEY definitions
  // -------------------------------------------------------------------------

  public static final UniqueKey<BrandsRecord> BRANDS_NAME_KEY = Internal
      .createUniqueKey(Brands.BRANDS, DSL.name("brands_name_key"),
          new TableField[]{Brands.BRANDS.NAME}, true);
  public static final UniqueKey<BrandsRecord> BRANDS_PKEY = Internal
      .createUniqueKey(Brands.BRANDS, DSL.name("brands_pkey"), new TableField[]{Brands.BRANDS.ID},
          true);
  public static final UniqueKey<ModelsRecord> MODELS_NAME_KEY = Internal
      .createUniqueKey(Models.MODELS, DSL.name("models_name_key"),
          new TableField[]{Models.MODELS.NAME}, true);
  public static final UniqueKey<ModelsRecord> MODELS_PKEY = Internal
      .createUniqueKey(Models.MODELS, DSL.name("models_pkey"), new TableField[]{Models.MODELS.ID},
          true);
  public static final UniqueKey<OwnersRecord> OWNERS_PKEY = Internal
      .createUniqueKey(Owners.OWNERS, DSL.name("owners_pkey"), new TableField[]{Owners.OWNERS.ID},
          true);
  public static final UniqueKey<VehiclesRecord> VEHICLES_PKEY = Internal
      .createUniqueKey(Vehicles.VEHICLES, DSL.name("vehicles_pkey"),
          new TableField[]{Vehicles.VEHICLES.ID}, true);

  // -------------------------------------------------------------------------
  // FOREIGN KEY definitions
  // -------------------------------------------------------------------------

  public static final ForeignKey<ModelsRecord, BrandsRecord> MODELS__MODELS_BRAND_ID_FKEY = Internal
      .createForeignKey(Models.MODELS, DSL.name("models_brand_id_fkey"),
          new TableField[]{Models.MODELS.BRAND_ID}, Keys.BRANDS_PKEY,
          new TableField[]{Brands.BRANDS.ID}, true);
  public static final ForeignKey<VehiclesRecord, BrandsRecord> VEHICLES__VEHICLES_BRAND_ID_FKEY = Internal
      .createForeignKey(Vehicles.VEHICLES, DSL.name("vehicles_brand_id_fkey"),
          new TableField[]{Vehicles.VEHICLES.BRAND_ID}, Keys.BRANDS_PKEY,
          new TableField[]{Brands.BRANDS.ID}, true);
  public static final ForeignKey<VehiclesRecord, ModelsRecord> VEHICLES__VEHICLES_MODEL_ID_FKEY = Internal
      .createForeignKey(Vehicles.VEHICLES, DSL.name("vehicles_model_id_fkey"),
          new TableField[]{Vehicles.VEHICLES.MODEL_ID}, Keys.MODELS_PKEY,
          new TableField[]{Models.MODELS.ID}, true);
  public static final ForeignKey<VehiclesRecord, OwnersRecord> VEHICLES__VEHICLES_OWNER_ID_FKEY = Internal
      .createForeignKey(Vehicles.VEHICLES, DSL.name("vehicles_owner_id_fkey"),
          new TableField[]{Vehicles.VEHICLES.OWNER_ID}, Keys.OWNERS_PKEY,
          new TableField[]{Owners.OWNERS.ID}, true);
}
